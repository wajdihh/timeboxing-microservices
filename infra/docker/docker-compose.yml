services:
  
# ✅ Shared Services
  postgres:
    image: postgres:latest
    container_name: identity-db
    restart: always
    env_file:
      - .env.${NODE_ENV}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: identity
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      retries: 5
      
# Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - cadvisor
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://identity-service:${METRICS_PORT}/metrics"]
      interval: 10s
      timeout: 5s
      retries: 10

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

# ✅ Microservices (Each One Only Uses Its Needed Dependencies)
  identity-service:
    build:
      context: ../../microservices/identity-service
      dockerfile: Dockerfile
    container_name: identity-service
    image: myapp/identity-service:latest
    ports:
      - "${PORT}:3000" 
    env_file:
      - .env.${NODE_ENV}
    environment:
      NODE_ENV: ${NODE_ENV}
      METRICS_PORT: ${METRICS_PORT}
    volumes:
      - ../../microservices/identity-service:/app
      - /app/node_modules
    command: ["npm", "run", "start"]
    depends_on:
      - prometheus

volumes:
  pgdata:
  grafana-storage:
